{"ast":null,"code":"function leftPad(value, count = 2, char = '0') {\n  const stringValue = value.toString();\n  let newValue = stringValue;\n\n  if (stringValue.legth < count) {\n    for (let i = 0; i < count - stringValue.length; i++) {\n      newValue = char + stringValue;\n    }\n  }\n\n  return newValue;\n}\n\nfunction getNewTimestamp() {\n  const now = new Date();\n  let result = '';\n  result += leftPad(now.getDate());\n  result += '/';\n  result += leftPad(now.getMonth() + 1);\n  result += '/';\n  result += now.getFullYear();\n  result += ' ';\n  result += leftPad(now.getHours());\n  result += ':';\n  result += leftPad(now.getMinutes());\n  result += ':';\n  result += leftPad(now.getSeconds());\n  result += '.';\n  result += leftPad(now.getMilliseconds(), 3);\n  return result;\n}\n\nexport { getNewTimestamp };","map":{"version":3,"sources":["/home/thiago/CursosTecnologia/GitHubRepositorios/IGTI-FullStack/Modulo-03/Desafios/React-Classes/src/helpers/dateTimeHelper.js"],"names":["leftPad","value","count","char","stringValue","toString","newValue","legth","i","length","getNewTimestamp","now","Date","result","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","getMilliseconds"],"mappings":"AACA,SAASA,OAAT,CAAiBC,KAAjB,EAAwBC,KAAK,GAAG,CAAhC,EAAmCC,IAAI,GAAG,GAA1C,EAA8C;AAC1C,QAAMC,WAAW,GAAGH,KAAK,CAACI,QAAN,EAApB;AAEA,MAAIC,QAAQ,GAAGF,WAAf;;AAEA,MAAIA,WAAW,CAACG,KAAZ,GAAoBL,KAAxB,EAA8B;AAC1B,SAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,KAAK,GAAGE,WAAW,CAACK,MAAvC,EAA+CD,CAAC,EAAhD,EAAmD;AAC/CF,MAAAA,QAAQ,GAAGH,IAAI,GAAGC,WAAlB;AACH;AACJ;;AAED,SAAOE,QAAP;AACH;;AAED,SAASI,eAAT,GAA0B;AACtB,QAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AAEA,MAAIC,MAAM,GAAG,EAAb;AAEAA,EAAAA,MAAM,IAAIb,OAAO,CAACW,GAAG,CAACG,OAAJ,EAAD,CAAjB;AACAD,EAAAA,MAAM,IAAI,GAAV;AACAA,EAAAA,MAAM,IAAIb,OAAO,CAACW,GAAG,CAACI,QAAJ,KAAiB,CAAlB,CAAjB;AACAF,EAAAA,MAAM,IAAI,GAAV;AACAA,EAAAA,MAAM,IAAIF,GAAG,CAACK,WAAJ,EAAV;AACAH,EAAAA,MAAM,IAAI,GAAV;AACAA,EAAAA,MAAM,IAAIb,OAAO,CAACW,GAAG,CAACM,QAAJ,EAAD,CAAjB;AACAJ,EAAAA,MAAM,IAAI,GAAV;AACAA,EAAAA,MAAM,IAAIb,OAAO,CAACW,GAAG,CAACO,UAAJ,EAAD,CAAjB;AACAL,EAAAA,MAAM,IAAI,GAAV;AACAA,EAAAA,MAAM,IAAIb,OAAO,CAACW,GAAG,CAACQ,UAAJ,EAAD,CAAjB;AACAN,EAAAA,MAAM,IAAI,GAAV;AACAA,EAAAA,MAAM,IAAIb,OAAO,CAACW,GAAG,CAACS,eAAJ,EAAD,EAAwB,CAAxB,CAAjB;AAEA,SAAOP,MAAP;AAEH;;AAED,SAAQH,eAAR","sourcesContent":["\nfunction leftPad(value, count = 2, char = '0'){\n    const stringValue = value.toString();\n\n    let newValue = stringValue;\n\n    if (stringValue.legth < count){\n        for(let i = 0; i < count - stringValue.length; i++){\n            newValue = char + stringValue;\n        }\n    }\n\n    return newValue;\n}\n\nfunction getNewTimestamp(){\n    const now = new Date();\n    \n    let result = '';\n\n    result += leftPad(now.getDate());\n    result += '/';\n    result += leftPad(now.getMonth() + 1);\n    result += '/';\n    result += now.getFullYear();\n    result += ' ';\n    result += leftPad(now.getHours());\n    result += ':';\n    result += leftPad(now.getMinutes());\n    result += ':';\n    result += leftPad(now.getSeconds());\n    result += '.';\n    result += leftPad(now.getMilliseconds(), 3);\n\n    return result;\n    \n}\n\nexport {getNewTimestamp};"]},"metadata":{},"sourceType":"module"}